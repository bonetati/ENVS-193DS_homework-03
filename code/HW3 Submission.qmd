---
title: "HW 3"
subtitle: "https://github.com/bonetati/ENVS-193DS_homework-03"
format: html
---

```{r setup}
library(tidyverse)
library(here)
library(gt) 
library(janitor)
library(readxl)
library(dplyr)
library(ggfx)

# Read in data
personal_data <- read_csv(here("data", "193data.csv"))
```
1a.
I could calculate the mean stress level for each day of the week to understand if certain days are more stressful. This is informative because I suspect that weekdays, especially Mondays, are more stressful due to academic or work responsibilities, while weekends are probably less stressful.

```{r 1b}

ggplot(personal_data, aes(x = 
  factor(
    Day_of_Week,
      levels = c("Saturday", "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday")), y = Stress_Level, fill = Day_of_Week)) +
  geom_jitter(width = 0.2, alpha = 0.4) +
  stat_summary(fun = mean, geom = "col", alpha = 0.6, color = "black") +
  scale_fill_brewer(palette = "Set2") +
  labs(
    title = "Average Stress Level by Day of the Week",
    x = "Day of the Week",
    y = "Stress Level"
  ) +
  theme_minimal()

```

1c.
Figure 1. This figure shows the distribution and mean of my self reported stress levels by day of the week. Bars represent the average stress level for each day, while points show individual daily reports.

```{r 1d}
personal_data %>%
  group_by(Day_of_Week) %>%
  summarize(`Average Stress Level` = round(mean(Stress_Level, na.rm = TRUE), 1)) %>%
  rename(`Day of Week` = Day_of_Week) %>%
  arrange(factor(`Day of Week`, levels = c("Saturday", "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday"))) %>%
  gt() %>%
  tab_header(
    title = "Average Stress Level by Day of the Week",
  )
```

2a
An affective visualization of my personal data could be a watercolor painting where each day of the week is represented as a different color strip. The width of each strip corresponds to the average stress level for that dayâ€”wider strips for higher stress. Instead of numeric axes, the focus is on emotional resonance, using calm colors for low-stress days and intense, warm colors for high-stress days. This approach is inspired by how emotions are often better conveyed through color and form, rather than charts.

2b
```{r}

```

2c
```{r}

library(tidyverse)
library(ggfx)

# Custom segment widths in the order you requested
chunk_order <- c("Sat", "Sun", "Mon", "Tue", "Wed", "Thu", "Fri")
chunk_sizes <- c(1.7, 2.2, 3.6, 5.2, 3.0, 4.6, 2.7)  # how wide each chunk should be

# Stress data
stress_data <- tibble(
  day = chunk_order,
  stress = c(1, 2, 3, 4, 5, 6, 7),
  width = chunk_sizes
)

stress_data <- stress_data %>%
  mutate(day = factor(day, levels = chunk_order))

# Build the radial plot
ggplot(stress_data, aes(x = day, y = stress, fill = stress, width = width)) +
  with_blur(
    geom_col(color = NA, alpha = 0.95),
    sigma = 6
  ) +
  # Labels if desired:
  coord_polar(start = 0) +
  scale_fill_gradientn(colors = c("#1B263B", "#5DADE2", "#A569BD", "#F1948A", "#C0392B")) +
  theme_void() +
  theme(legend.position = "none")

```

